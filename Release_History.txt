Version 0.2.2
* Cash flow type added
* Currency type added
* TimePeriodError and CouponDate Error are now enums rather than structs

Version 0.2.1
* Data structure for bonds added with example reading data from JSON
* New types for day count conventions and business day adjustments
* NthWeedDay has been renamed to NthWeek (of month), which seems to be more appropriate
* Implementation of Serialization/Deserialization of TimePeriod

Version 0.2.0
* Replacement the SimpleCalendar and the Calendar trait by one Calendar struct. At
  initialization, the holiday calendar is computed for a range of year by specifying 
  a set of holiday rules. A very broad range of holiday calendars could be generated 
  this way. The method `is_holiday` returns true only for holidays, but not for
  weekends. There is another method `is_weekend` to check for that. The new
  method `is_business_day` checks wether the given date is neither a weekend nor 
  a holiday.

Version 0.1.3
* Implementation of TimerPeriod is no longer a trait, but a struct. The calendar 
  required for BusinessDaily time period is now an external parameter. This seems
  to be a better choice, since a calendar is more a parameter than part of a method.
  Calendars may also be subject to chance, though only rarely.
